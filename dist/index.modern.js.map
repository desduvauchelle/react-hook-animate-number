{"version":3,"file":"index.modern.js","sources":["../src/easingFunctions.ts","../src/useAnimateNumber.tsx"],"sourcesContent":["// https://easings.net/#\n\n// x is a value for progress of the animation between 0 and 1\n\nexport type EasingFunction = (x: number) => number\nexport type EasingFunctionNames = \"easeInOutCubic\" | \"easeOutCirc\" | \"easeOutQuint\" | \"easeOutExpo\"\n\nconst easing: {\n\t[easingName: string]: EasingFunction\n} = {\n\teaseInOutCubic: (x: number): number => {\n\t\tif (x >= 1) return 1\n\t\treturn x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2\n\t},\n\teaseOutCirc: (x: number): number => {\n\t\tif (x >= 1) return 1\n\t\treturn Math.sqrt(1 - Math.pow(x - 1, 2))\n\t},\n\teaseOutQuint: (x: number): number => {\n\t\tif (x >= 1) return 1\n\t\treturn 1 - Math.pow(1 - x, 5)\n\t},\n\teaseOutExpo: (x: number): number => {\n\t\treturn x === 1 ? 1 : 1 - Math.pow(2, -10 * x)\n\t}\n}\n\nexport default easing","import { useState, useEffect, useRef, useCallback } from 'react'\nimport easing, { EasingFunctionNames } from './easingFunctions'\nconst FPS = 60\n\n\nexport type UseAnimateNumberProps = {\n\tnumber: number,\n\tdurationInMs?: number,\n\tdecimalPlaces?: number,\n\teasingFunctionName?: EasingFunctionNames,\n\tsetInitialValue?: boolean,\n\tdebug?: boolean\n}\n\nexport type UseAnimateType = (props: UseAnimateNumberProps) => { number: number, isAnimating: boolean, isGoingUp: boolean }\n\nconst useAnimateNumber: UseAnimateType =\n\t({\n\t\tnumber = 0,\n\t\tdurationInMs = 4000,\n\t\tdecimalPlaces = 0,\n\t\teasingFunctionName = \"easeOutExpo\",\n\t\tsetInitialValue = false,\n\t\tdebug = false\n\t}) => {\n\t\tconst [currentNumber, setCurrentNumber] = useState(0)\n\t\tconst [originalNumber, setOriginalNumber] = useState(setInitialValue ? number : 0)\n\t\tconst [currentTarget, setCurrentTarget] = useState(0)\n\t\tconst [step, setStep] = useState(0)\n\t\tconst [data, setData] = useState({\n\t\t\tcurrentNumber: 0,\n\t\t\toriginalNumber: setInitialValue ? number : 0,\n\t\t\tstep: 0,\n\t\t\tisGoingUp: false,\n\t\t\tisAnimating: false\n\t\t})\n\t\tconst requestRef = useRef<number>()\n\t\tconst mountedRef = useRef<boolean>(true)\n\t\tconst previousTimeRef = useRef<undefined | number>()\n\n\n\t\tconst animate = useCallback((time: number) => {\n\t\t\tif (!mountedRef.current) return\n\t\t\tif (previousTimeRef.current === undefined) {\n\t\t\t\tpreviousTimeRef.current = time\n\t\t\t\trequestRef.current = requestAnimationFrame(animate)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst reset = () => {\n\t\t\t\tsetData({\n\t\t\t\t\tcurrentNumber: number,\n\t\t\t\t\toriginalNumber: number,\n\t\t\t\t\tstep: 0,\n\t\t\t\t\tisGoingUp: false,\n\t\t\t\t\tisAnimating: false\n\t\t\t\t})\n\t\t\t\tpreviousTimeRef.current = undefined\n\t\t\t\tif (requestRef.current) cancelAnimationFrame(requestRef.current)\n\t\t\t\trequestRef.current = undefined\n\t\t\t}\n\n\t\t\tif (typeof number !== \"number\") {\n\t\t\t\ttry {\n\t\t\t\t\tnumber = parseFloat(number)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"useAnimateNumber: number is not a number\")\n\t\t\t\t\treset()\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (number === data.currentNumber) {\n\t\t\t\treset()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst deltaTime = time - previousTimeRef.current\n\t\t\tconsole.log(\"deltaTime\", deltaTime, durationInMs)\n\t\t\t// Animation is finished\n\t\t\tif (deltaTime >= durationInMs) {\n\t\t\t\treset()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t//\n\t\t\t// Animation - Update the data using easing function\n\t\t\t//\n\t\t\tlet easingFunction = easing.easeOutExpo\n\t\t\tif (easingFunctionName && easing[easingFunctionName]) {\n\t\t\t\teasingFunction = easing[easingFunctionName]\n\t\t\t}\n\n\t\t\tconst progress = deltaTime / durationInMs\n\t\t\tconst percentageOfTargetValue = easingFunction(progress)\n\t\t\tlet currentValue = percentageOfTargetValue * number\n\t\t\tsetData(previousData => {\n\t\t\t\tconst isGoingUp = number > previousData.originalNumber\n\t\t\t\tif (!isGoingUp) {\n\t\t\t\t\tcurrentValue = (1 - percentageOfTargetValue) * previousData.originalNumber + number\n\t\t\t\t}\n\t\t\t\tif (currentValue !== 0) {\n\t\t\t\t\tcurrentValue = parseFloat(currentValue.toFixed(decimalPlaces))\n\t\t\t\t}\n\t\t\t\tif (isGoingUp && currentValue > number) {\n\t\t\t\t\tcurrentValue = number\n\t\t\t\t}\n\t\t\t\tif (!isGoingUp && currentValue < number) {\n\t\t\t\t\tcurrentValue = number\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...previousData,\n\t\t\t\t\tcurrentNumber: currentValue,\n\t\t\t\t\tisGoingUp,\n\t\t\t\t\tisAnimating: true\n\t\t\t\t}\n\t\t\t})\n\t\t\trequestRef.current = window.requestAnimationFrame(animate)\n\t\t}, [number, durationInMs, decimalPlaces, easingFunctionName])\n\n\n\t\tuseEffect(() => {\n\t\t\trequestRef.current = window.requestAnimationFrame(animate)\n\t\t\treturn () => {\n\t\t\t\tif (requestRef.current) cancelAnimationFrame(requestRef.current)\n\t\t\t}\n\t\t}, [number])\n\n\t\t// useEffect(() => {\n\t\t// \tlet mountedRef = true\n\n\t\t// \tif (number === originalNumber) return\n\t\t// \tif (typeof number !== \"number\") {\n\t\t// \t\ttry {\n\t\t// \t\t\tnumber = parseFloat(number)\n\t\t// \t\t} catch (e) {\n\t\t// \t\t\tconsole.error(\"useAnimateNumber: number is not a number\")\n\t\t// \t\t\treturn\n\t\t// \t\t}\n\t\t// \t}\n\n\n\t\t// \t// Check if it's already in the middle of an animation\n\t\t// \tif (step > 0 && currentTarget !== number) {\n\t\t// \t\tconsole.log(\"already animating\")\n\t\t// \t\tsetOriginalNumber(currentNumber)\n\t\t// \t\tsetStep(0)\n\t\t// \t}\n\n\n\t\t// \tlet isGoingUp = number > originalNumber\n\n\t\t// \tconst numberOfSteps = Math.round(1000 / FPS * durationInMs / 1000)\n\n\t\t// \tconst progress = (step + 1) / numberOfSteps\n\t\t// \tlet easingFunction = easing.easeOutExpo\n\t\t// \tif (easingFunctionName && easing[easingFunctionName]) {\n\t\t// \t\teasingFunction = easing[easingFunctionName]\n\t\t// \t}\n\t\t// \tconst percentageOfTargetValue = easingFunction(progress)\n\t\t// \tlet currentValue = percentageOfTargetValue * number\n\t\t// \tif (!isGoingUp) {\n\t\t// \t\tcurrentValue = (1 - percentageOfTargetValue) * originalNumber + number\n\t\t// \t}\n\t\t// \tif (currentValue !== 0) {\n\t\t// \t\tcurrentValue = parseFloat(currentValue.toFixed(decimalPlaces))\n\t\t// \t}\n\t\t// \tif (isGoingUp && currentValue > number) {\n\t\t// \t\tcurrentValue = number\n\t\t// \t}\n\t\t// \tif (!isGoingUp && currentValue < number) {\n\t\t// \t\tcurrentValue = number\n\t\t// \t}\n\t\t// \t// console.log(`From ${originalNumber} to ${currentTarget}. Currently: ${currentValue} ${isGoingUp? `UP⬆️`: `DOWN⬇️`}`)\n\n\t\t// \tif (step === numberOfSteps || currentValue === number) {\n\t\t// \t\tsetOriginalNumber(number)\n\t\t// \t\tsetCurrentNumber(number)\n\t\t// \t\tsetStep(0)\n\t\t// \t\treturn\n\t\t// \t}\n\n\n\n\n\n\t\t// \tsetTimeout(() => {\n\t\t// \t\tif (!mountedRef) return\n\n\t\t// \t\tsetCurrentTarget(number)\n\t\t// \t\tsetStep(step + 1)\n\t\t// \t\tsetCurrentNumber(currentValue)\n\t\t// \t}, 1000 / FPS)\n\n\t\t// \treturn () => {\n\t\t// \t\tmountedRef = false\n\t\t// \t}\n\t\t// }, [number, originalNumber, currentNumber, step, debug])\n\n\t\treturn {\n\t\t\tnumber: data.currentNumber,\n\t\t\tisGoingUp: data.isGoingUp,\n\t\t\tisAnimating: data.isAnimating\n\t\t}\n\t}\n\nexport default useAnimateNumber\n"],"names":["easing","easeInOutCubic","x","Math","pow","easeOutCirc","sqrt","easeOutQuint","easeOutExpo","useAnimateNumber","number","durationInMs","decimalPlaces","easingFunctionName","setInitialValue","debug","currentNumber","setCurrentNumber","useState","originalNumber","setOriginalNumber","currentTarget","setCurrentTarget","step","setStep","data","setData","isGoingUp","isAnimating","requestRef","useRef","mountedRef","previousTimeRef","animate","useCallback","time","current","undefined","requestAnimationFrame","reset","cancelAnimationFrame","parseFloat","e","console","error","deltaTime","log","easingFunction","progress","percentageOfTargetValue","currentValue","previousData","toFixed","window","useEffect"],"mappings":";;AAOA,MAAMA,MAAM,GAER;AACHC,EAAAA,cAAc,EAAGC,CAAD;AACf,QAAIA,CAAC,IAAI,CAAT,EAAY,OAAO,CAAP;AACZ,WAAOA,CAAC,GAAG,GAAJ,GAAU,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAAtB,GAA0B,IAAIC,IAAI,CAACC,GAAL,CAAS,CAAC,CAAD,GAAKF,CAAL,GAAS,CAAlB,EAAqB,CAArB,IAA0B,CAA/D;AACA,GAJE;AAKHG,EAAAA,WAAW,EAAGH,CAAD;AACZ,QAAIA,CAAC,IAAI,CAAT,EAAY,OAAO,CAAP;AACZ,WAAOC,IAAI,CAACG,IAAL,CAAU,IAAIH,IAAI,CAACC,GAAL,CAASF,CAAC,GAAG,CAAb,EAAgB,CAAhB,CAAd,CAAP;AACA,GARE;AASHK,EAAAA,YAAY,EAAGL,CAAD;AACb,QAAIA,CAAC,IAAI,CAAT,EAAY,OAAO,CAAP;AACZ,WAAO,IAAIC,IAAI,CAACC,GAAL,CAAS,IAAIF,CAAb,EAAgB,CAAhB,CAAX;AACA,GAZE;AAaHM,EAAAA,WAAW,EAAGN,CAAD;AACZ,WAAOA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,IAAIC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMF,CAAlB,CAAzB;AACA;AAfE,CAFJ;;ACSA,MAAMO,gBAAgB,GACrB,CAAC;AACAC,EAAAA,MAAM,EAANA,OAAM,GAAG,CADT;AAEAC,EAAAA,YAAY,EAAZA,aAAY,GAAG,IAFf;AAGAC,EAAAA,aAAa,EAAbA,cAAa,GAAG,CAHhB;AAIAC,EAAAA,kBAAkB,EAAlBA,mBAAkB,GAAG,aAJrB;AAKAC,EAAAA,eAAe,EAAfA,gBAAe,GAAG,KALlB;AAMAC,EAAAA,KAAK,EAALA,MAAK,GAAG;AANR,CAAD;AAQC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCF,QAAQ,CAACJ,gBAAe,GAAGJ,OAAH,GAAY,CAA5B,CAApD;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAChCF,IAAAA,aAAa,EAAE,CADiB;AAEhCG,IAAAA,cAAc,EAAEL,gBAAe,GAAGJ,OAAH,GAAY,CAFX;AAGhCa,IAAAA,IAAI,EAAE,CAH0B;AAIhCI,IAAAA,SAAS,EAAE,KAJqB;AAKhCC,IAAAA,WAAW,EAAE;AALmB,GAAD,CAAhC;AAOA,QAAMC,UAAU,GAAGC,MAAM,EAAzB;AACA,QAAMC,UAAU,GAAGD,MAAM,CAAU,IAAV,CAAzB;AACA,QAAME,eAAe,GAAGF,MAAM,EAA9B;AAGA,QAAMG,OAAO,GAAGC,WAAW,CAAEC,IAAD;AAC3B,QAAI,CAACJ,UAAU,CAACK,OAAhB,EAAyB;;AACzB,QAAIJ,eAAe,CAACI,OAAhB,KAA4BC,SAAhC,EAA2C;AAC1CL,MAAAA,eAAe,CAACI,OAAhB,GAA0BD,IAA1B;AACAN,MAAAA,UAAU,CAACO,OAAX,GAAqBE,qBAAqB,CAACL,OAAD,CAA1C;AACA;AACA;;AAED,UAAMM,KAAK,GAAG;AACbb,MAAAA,OAAO,CAAC;AACPV,QAAAA,aAAa,EAAEN,OADR;AAEPS,QAAAA,cAAc,EAAET,OAFT;AAGPa,QAAAA,IAAI,EAAE,CAHC;AAIPI,QAAAA,SAAS,EAAE,KAJJ;AAKPC,QAAAA,WAAW,EAAE;AALN,OAAD,CAAP;AAOAI,MAAAA,eAAe,CAACI,OAAhB,GAA0BC,SAA1B;AACA,UAAIR,UAAU,CAACO,OAAf,EAAwBI,oBAAoB,CAACX,UAAU,CAACO,OAAZ,CAApB;AACxBP,MAAAA,UAAU,CAACO,OAAX,GAAqBC,SAArB;AACA,KAXD;;AAaA,QAAI,OAAO3B,OAAP,KAAkB,QAAtB,EAAgC;AAC/B,UAAI;AACHA,QAAAA,OAAM,GAAG+B,UAAU,CAAC/B,OAAD,CAAnB;AACA,OAFD,CAEE,OAAOgC,CAAP,EAAU;AACXC,QAAAA,OAAO,CAACC,KAAR,CAAc,0CAAd;AACAL,QAAAA,KAAK;AACL;AACA;AACD;;AAED,QAAI7B,OAAM,KAAKe,IAAI,CAACT,aAApB,EAAmC;AAClCuB,MAAAA,KAAK;AACL;AACA;;AAED,UAAMM,SAAS,GAAGV,IAAI,GAAGH,eAAe,CAACI,OAAzC;AACAO,IAAAA,OAAO,CAACG,GAAR,CAAY,WAAZ,EAAyBD,SAAzB,EAAoClC,aAApC;;AAEA,QAAIkC,SAAS,IAAIlC,aAAjB,EAA+B;AAC9B4B,MAAAA,KAAK;AACL;AACA;;AAKD,QAAIQ,cAAc,GAAG/C,MAAM,CAACQ,WAA5B;;AACA,QAAIK,mBAAkB,IAAIb,MAAM,CAACa,mBAAD,CAAhC,EAAsD;AACrDkC,MAAAA,cAAc,GAAG/C,MAAM,CAACa,mBAAD,CAAvB;AACA;;AAED,UAAMmC,QAAQ,GAAGH,SAAS,GAAGlC,aAA7B;AACA,UAAMsC,uBAAuB,GAAGF,cAAc,CAACC,QAAD,CAA9C;AACA,QAAIE,YAAY,GAAGD,uBAAuB,GAAGvC,OAA7C;AACAgB,IAAAA,OAAO,CAACyB,YAAY;AACnB,YAAMxB,SAAS,GAAGjB,OAAM,GAAGyC,YAAY,CAAChC,cAAxC;;AACA,UAAI,CAACQ,SAAL,EAAgB;AACfuB,QAAAA,YAAY,GAAG,CAAC,IAAID,uBAAL,IAAgCE,YAAY,CAAChC,cAA7C,GAA8DT,OAA7E;AACA;;AACD,UAAIwC,YAAY,KAAK,CAArB,EAAwB;AACvBA,QAAAA,YAAY,GAAGT,UAAU,CAACS,YAAY,CAACE,OAAb,CAAqBxC,cAArB,CAAD,CAAzB;AACA;;AACD,UAAIe,SAAS,IAAIuB,YAAY,GAAGxC,OAAhC,EAAwC;AACvCwC,QAAAA,YAAY,GAAGxC,OAAf;AACA;;AACD,UAAI,CAACiB,SAAD,IAAcuB,YAAY,GAAGxC,OAAjC,EAAyC;AACxCwC,QAAAA,YAAY,GAAGxC,OAAf;AACA;;AACD,aAAO,EACN,GAAGyC,YADG;AAENnC,QAAAA,aAAa,EAAEkC,YAFT;AAGNvB,QAAAA,SAHM;AAINC,QAAAA,WAAW,EAAE;AAJP,OAAP;AAMA,KApBM,CAAP;AAqBAC,IAAAA,UAAU,CAACO,OAAX,GAAqBiB,MAAM,CAACf,qBAAP,CAA6BL,OAA7B,CAArB;AACA,GA7E0B,EA6ExB,CAACvB,OAAD,EAASC,aAAT,EAAuBC,cAAvB,EAAsCC,mBAAtC,CA7EwB,CAA3B;AAgFAyC,EAAAA,SAAS,CAAC;AACTzB,IAAAA,UAAU,CAACO,OAAX,GAAqBiB,MAAM,CAACf,qBAAP,CAA6BL,OAA7B,CAArB;AACA,WAAO;AACN,UAAIJ,UAAU,CAACO,OAAf,EAAwBI,oBAAoB,CAACX,UAAU,CAACO,OAAZ,CAApB;AACxB,KAFD;AAGA,GALQ,EAKN,CAAC1B,OAAD,CALM,CAAT;AA8EA,SAAO;AACNA,IAAAA,MAAM,EAAEe,IAAI,CAACT,aADP;AAENW,IAAAA,SAAS,EAAEF,IAAI,CAACE,SAFV;AAGNC,IAAAA,WAAW,EAAEH,IAAI,CAACG;AAHZ,GAAP;AAKA,CA5LF;;;;"}