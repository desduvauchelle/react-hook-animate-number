{"version":3,"sources":["../../src/easingFunctions.ts","../../src/useAnimateNumber.tsx","App.js","index.js"],"names":["easing","easeInOutCubic","x","Math","easeOutCirc","easeOutQuint","easeOutExpo","number","durationInMs","decimalPlaces","easingFunctionName","setInitialValue","useState","currentNumber","originalNumber","step","isGoingUp","isAnimating","data","setData","requestRef","useRef","mountedRef","previousTimeRef","animate","useCallback","requestAnimationFrame","reset","cancelAnimationFrame","parseFloat","e","console","deltaTime","time","easingFunction","percentageOfTargetValue","currentValue","previousData","window","useEffect","App","React","setNumber","duration","setDuration","tempNumber","setTempNumber","tempDuration","setTempDuration","animatedNumber","useAnimateNumber","debug","className","onClick","preventDefault","random","floor","onSubmit","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7692d979.chunk.js","sourcesContent":["// https://easings.net/#\n\n// x is a value for progress of the animation between 0 and 1\n\nexport type EasingFunction = (x: number) => number\nexport type EasingFunctionNames = \"easeInOutCubic\" | \"easeOutCirc\" | \"easeOutQuint\" | \"easeOutExpo\"\n\nconst easing: {\n\t[easingName: string]: EasingFunction\n} = {\n\teaseInOutCubic: (x: number): number => {\n\t\tif (x >= 1) return 1\n\t\treturn x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2\n\t},\n\teaseOutCirc: (x: number): number => {\n\t\tif (x >= 1) return 1\n\t\treturn Math.sqrt(1 - Math.pow(x - 1, 2))\n\t},\n\teaseOutQuint: (x: number): number => {\n\t\tif (x >= 1) return 1\n\t\treturn 1 - Math.pow(1 - x, 5)\n\t},\n\teaseOutExpo: (x: number): number => {\n\t\treturn x === 1 ? 1 : 1 - Math.pow(2, -10 * x)\n\t}\n}\n\nexport default easing","import { useState, useEffect, useRef, useCallback } from 'react'\nimport easing, { EasingFunctionNames } from './easingFunctions'\nconst FPS = 60\n\n\nexport type UseAnimateNumberProps = {\n\tnumber: number,\n\tdurationInMs?: number,\n\tdecimalPlaces?: number,\n\teasingFunctionName?: EasingFunctionNames,\n\tsetInitialValue?: boolean,\n\tdebug?: boolean\n}\n\nexport type UseAnimateType = (props: UseAnimateNumberProps) => { number: number, isAnimating: boolean, isGoingUp: boolean }\n\nconst useAnimateNumber: UseAnimateType =\n\t({\n\t\tnumber = 0,\n\t\tdurationInMs = 4000,\n\t\tdecimalPlaces = 0,\n\t\teasingFunctionName = \"easeOutExpo\",\n\t\tsetInitialValue = false,\n\t\tdebug = false\n\t}) => {\n\t\tconst [currentNumber, setCurrentNumber] = useState(0)\n\t\tconst [originalNumber, setOriginalNumber] = useState(setInitialValue ? number : 0)\n\t\tconst [currentTarget, setCurrentTarget] = useState(0)\n\t\tconst [step, setStep] = useState(0)\n\t\tconst [data, setData] = useState({\n\t\t\tcurrentNumber: 0,\n\t\t\toriginalNumber: setInitialValue ? number : 0,\n\t\t\tstep: 0,\n\t\t\tisGoingUp: false,\n\t\t\tisAnimating: false\n\t\t})\n\t\tconst requestRef = useRef<number>()\n\t\tconst mountedRef = useRef<boolean>(true)\n\t\tconst previousTimeRef = useRef<undefined | number>()\n\n\n\t\tconst animate = useCallback((time: number) => {\n\t\t\tif (!mountedRef.current) return\n\t\t\tif (previousTimeRef.current === undefined) {\n\t\t\t\tpreviousTimeRef.current = time\n\t\t\t\trequestRef.current = requestAnimationFrame(animate)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst reset = () => {\n\t\t\t\tsetData({\n\t\t\t\t\tcurrentNumber: number,\n\t\t\t\t\toriginalNumber: number,\n\t\t\t\t\tstep: 0,\n\t\t\t\t\tisGoingUp: false,\n\t\t\t\t\tisAnimating: false\n\t\t\t\t})\n\t\t\t\tpreviousTimeRef.current = undefined\n\t\t\t\tif (requestRef.current) cancelAnimationFrame(requestRef.current)\n\t\t\t\trequestRef.current = undefined\n\t\t\t}\n\n\t\t\tif (typeof number !== \"number\") {\n\t\t\t\ttry {\n\t\t\t\t\tnumber = parseFloat(number)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"useAnimateNumber: number is not a number\")\n\t\t\t\t\treset()\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (number === data.currentNumber) {\n\t\t\t\treset()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst deltaTime = time - previousTimeRef.current\n\n\t\t\t// Animation is finished\n\t\t\tif (deltaTime >= durationInMs) {\n\t\t\t\treset()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t//\n\t\t\t// Animation - Update the data using easing function\n\t\t\t//\n\t\t\tlet easingFunction = easing.easeOutExpo\n\t\t\tif (easingFunctionName && easing[easingFunctionName]) {\n\t\t\t\teasingFunction = easing[easingFunctionName]\n\t\t\t}\n\n\t\t\tconst progress = deltaTime / durationInMs\n\t\t\tconst percentageOfTargetValue = easingFunction(progress)\n\t\t\tlet currentValue = percentageOfTargetValue * number\n\t\t\tsetData(previousData => {\n\t\t\t\tconst isGoingUp = number > previousData.originalNumber\n\t\t\t\tif (!isGoingUp) {\n\t\t\t\t\tcurrentValue = (1 - percentageOfTargetValue) * previousData.originalNumber + number\n\t\t\t\t}\n\t\t\t\tif (currentValue !== 0) {\n\t\t\t\t\tcurrentValue = parseFloat(currentValue.toFixed(decimalPlaces))\n\t\t\t\t}\n\t\t\t\tif (isGoingUp && currentValue > number) {\n\t\t\t\t\tcurrentValue = number\n\t\t\t\t}\n\t\t\t\tif (!isGoingUp && currentValue < number) {\n\t\t\t\t\tcurrentValue = number\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...previousData,\n\t\t\t\t\tcurrentNumber: currentValue,\n\t\t\t\t\tisGoingUp,\n\t\t\t\t\tisAnimating: true\n\t\t\t\t}\n\t\t\t})\n\t\t\trequestRef.current = window.requestAnimationFrame(animate)\n\t\t}, [number, durationInMs, decimalPlaces, easingFunctionName])\n\n\n\t\tuseEffect(() => {\n\t\t\trequestRef.current = window.requestAnimationFrame(animate)\n\t\t\treturn () => {\n\t\t\t\tif (requestRef.current) cancelAnimationFrame(requestRef.current)\n\t\t\t}\n\t\t}, [number])\n\n\n\n\t\treturn {\n\t\t\tnumber: data.currentNumber,\n\t\t\tisGoingUp: data.isGoingUp,\n\t\t\tisAnimating: data.isAnimating\n\t\t}\n\t}\n\nexport default useAnimateNumber\n","import React from 'react'\n\nimport useAnimateNumber from 'react-hook-animate-number'\n\nconst App = () => {\n\tconst [number, setNumber] = React.useState(382)\n\tconst [duration, setDuration] = React.useState(4000)\n\tconst [tempNumber, setTempNumber] = React.useState(382)\n\tconst [tempDuration, setTempDuration] = React.useState(4000)\n\tconst animatedNumber = useAnimateNumber({\n\t\tnumber: number,\n\t\tdurationInMs: duration,\n\t\tdebug: true,\n\t})\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault()\n\t\tsetNumber(tempNumber)\n\t\tsetDuration(tempDuration)\n\t}\n\n\tconst randomNumber = (e: FormEvent) => {\n\t\te.preventDefault()\n\t\tconst random = Math.floor(Math.random() * 1000) + 1\n\t\tsetTempNumber(random)\n\t\tsetNumber(random)\n\t\tsetDuration(tempDuration)\n\t}\n\n\n\treturn <div className=\"min-h-screen flex flex-col justify-center items-center\">\n\t\t<h1 className=\"text-6xl font-extrabold mb-12\">Animated number</h1>\n\t\t<div className=\"max-w-4xl w-full flex flex-col md:flex-row items-center justify-center gap-12\">\n\n\t\t\t<div className=\"flex-1 flex flex-col gap-4\">\n\t\t\t\t<div className={`text-6xl font-extrabold ${!animatedNumber.isAnimating ? \"bg-slate-300 dark:bg-slate-700\" : animatedNumber.isGoingUp ? \"bg-red-500\" : \"bg-green-500\"} rounded-xl text-center py-4 w-full`}>\n\t\t\t\t\t{animatedNumber.number}\n\t\t\t\t</div>\n\t\t\t\t<p className='flex flex-row gap-2 flex-wrap'>\n\t\t\t\t\t<span className=\"bg-slate-50 dark:bg-slate-700 rounded-lg px-2\">To: {number}</span>\n\t\t\t\t\t<span className=\"bg-slate-50 dark:bg-slate-700 rounded-lg px-2\">Duration: {duration}</span>\n\t\t\t\t\t<span className=\"bg-slate-50 dark:bg-slate-700 rounded-lg px-2\">Is animating: {animatedNumber.isAnimating ? \"true\" : \"false\"}</span>\n\t\t\t\t\t<span className=\"bg-slate-50 dark:bg-slate-700 rounded-lg px-2\">Is going up: {animatedNumber.isGoingUp ? \"true\" : \"false\"}</span>\n\t\t\t\t</p>\n\t\t\t\t<button onClick={randomNumber} className=\"bg-blue-500 text-2xl px-8 py-2 rounded-lg mt-8\">Random number</button>\n\t\t\t</div>\n\n\n\t\t\t<form onSubmit={onSubmit} className=\"flex-1\">\n\t\t\t\t<div className=\"flex flex-col gap-4\">\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>Number:</strong>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tclassName=\"block rounded-lg w-full p-2 text-slate-800\"\n\t\t\t\t\t\t\tplaceholder='Enter a number...'\n\t\t\t\t\t\t\tvalue={tempNumber}\n\t\t\t\t\t\t\tonChange={e => setTempNumber(e.target.value)} />\n\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>Animation duration (ms):</strong>\n\t\t\t\t\t\t<input type=\"number\"\n\t\t\t\t\t\t\tclassName=\"block rounded-lg w-full p-2 text-slate-800\"\n\t\t\t\t\t\t\tplaceholder='Enter a number...'\n\t\t\t\t\t\t\tvalue={tempDuration}\n\t\t\t\t\t\t\tonChange={e => setTempDuration(e.target.value)} />\n\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t<button className=\"bg-blue-500 text-2xl px-8 py-2 rounded-lg w-full\" type=\"submit\">Launch</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\n\t\t</div>\n\t</div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<>\n\t<App />\n</>, document.getElementById('root'))\n"],"sourceRoot":""}